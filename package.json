{
  "name": "codex-cli-button",
  "displayName": "Codex CLI Button",
  "description": "Adds an editor toolbar button that opens a terminal in the editor area and runs codex-cli.",
  "version": "0.0.1",
  "publisher": "local",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:codexcli.run",
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "contributes": {
    "configuration": {
      "title": "Codex CLI Button",
      "properties": {
        "codexcli.command": {
          "type": "string",
          "default": "codex",
          "markdownDescription": "Base command/binary to run (no flags). Add options in `codexcli.args` for reliable quoting. Example: to run `codex -p brain`, set command to `codex` and set args to either a single item `-p brain` or two items `-p` and `brain`."
        },
        "codexcli.args": {
          "type": "array",
          "default": [],
          "items": { "type": "string" },
          "markdownDescription": "Optional list of arguments appended after `codexcli.command`. You can add flags and values as two items (e.g. `-p` and `brain`) or as a single item with a space (e.g. `-p brain`). Do not add extra quotes. The extension tokenizes composite items and quotes values appropriately for your platform."
        },
        "codexcli.precheckBinary": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Best-effort check that the base command exists on PATH (or the given absolute path). Shows an error and skips running when not found."
        },
        "codexcli.cwdMode": {
          "type": "string",
          "default": "workspaceRoot",
          "enum": [
            "workspaceRoot",
            "activeWorkspace",
            "activeFileDir",
            "prompt"
          ],
          "markdownDescription": "Working directory mode. `workspaceRoot`: first workspace folder. `activeWorkspace`: workspace containing active file. `activeFileDir`: directory of active file. `prompt`: pick a folder when multiple are open."
        },
        "codexcli.rememberSelection": {
          "type": "boolean",
          "default": true,
          "description": "When in 'prompt' mode, remember the last selected folder and reuse it."
        },
        "codexcli.terminalName": {
          "type": "string",
          "default": "Codex CLI",
          "markdownDescription": "Name of the terminal used by Codex CLI Button. Change to customize the label or to run multiple Codex terminals side-by-side. Existing terminals are not renamed."
        },
        "codexcli.windowsMode": {
          "type": "string",
          "default": "block",
          "enum": ["block", "wsl", "native"],
          "markdownDescription": "Windows handling for Codex CLI. `block`: show an error (recommended). `wsl`: invoke via `wsl.exe` (runs Linux codex inside WSL). `native`: run as-is (experimental; not officially supported)."
        },
        "codexcli.showStatusBar": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Show a status bar action to run Codex from anywhere. When enabled, a right-side Codex button appears and triggers 'codexcli.run'."
        }
      }
    },
    "commands": [
      {
        "command": "codexcli.run",
        "title": "Run Codex CLI",
        "category": "Codex",
        "icon": "media/command-icon.svg"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "codexcli.run",
          "group": "navigation@100",
          "when": "editorTextFocus"
        }
      ]
    },
    "keybindings": [
      {
        "command": "codexcli.run",
        "key": "cmd+shift+.",
        "when": "editorTextFocus && !terminalFocus"
      }
    ]
  },
  "icon": "media/icon-256.png",
  "galleryBanner": {
    "color": "#111111",
    "theme": "dark"
  },
  "scripts": {
    "test:unit": "node test/cwd.test.js && node test/command.test.js && node test/windows.test.js",
    "test:integration": "node test/runTest.js",
    "test": "npm run -s test:unit && npm run -s test:integration"
  },
  "devDependencies": {
    "@vscode/test-electron": "^2.4.1",
    "mocha": "^10.4.0"
  },
  "dependencies": {
    "shell-quote": "^1.8.3",
    "which": "^5.0.0"
  }
}
